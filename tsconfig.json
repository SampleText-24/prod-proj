{
  "compilerOptions": {
    "outDir": "./dist/",
    // Подсвечивает все места где не указан тип
    // Но это не означает, что теперь вовсе нельзя использовать any
    // Это означает, что в подобных ситуациях разработчик должен явно писать any
    "noImplicitAny": true,
    "module": "ESNext",
    // В какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    "jsx": "react-jsx",
    // Компилятор будет обрабатывать не только TS, но и JS файлы
    "allowJs": true,
    "moduleResolution": "node",
    // Для абсолютных импортов
    "baseUrl": ".",
    "paths": {
      "*": ["./src/*"]
    },
    // esModuleInterop позволяет работать с пакетами, которые используют common js,
    // как с обычными пакетами с помощью import (require() module.export) = common js
    // import Moment from "moment"
    // без флага esModuleInterop результат undefined
    // console.log(Moment)
    // с флагом результат [object Object]
    // console.log(Moment)
    "esModuleInterop": true,
    // Если какая-либо библиотека не имеет default import,
    // loaders вроде ts-loader или babel-loader автоматически создают их
    // и вместо такого импорта -> import * as React from 'react'
    // можно писать такой -> import React from 'react'
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  }
}